<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" />
  <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/>
  <arg name="open_rviz" default="true"/>
  <arg name="move_forward_only" default="false"/>
  <arg name="tb3_model" default="$(arg model)"/>

  <!-- Robot 1 -->
  <group ns="robot1">
    <arg name="robot_ns" value="robot1" />
    <param name="use_sim_time" value="true" />
    <param name="odom_frame" value="/robot1/odom" />
    <param name="base_frame" value="/robot1/base_footprint" />

	  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
      <param name="frame_id" value="robot1/map"/>
    </node>

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg robot_ns)" />
    </node>
    
    <node pkg="tb3_diff_drive_fake" type="turtlebot3_fake_node" name="turtlebot3_fake_node" output="screen">
    </node>

    <!-- static map -> odom -->
    <node pkg="tf" type="static_transform_publisher" name="static_map_to_odom" 
          args="0 0.5 0 0 0 0 $(arg robot_ns)/map $(arg robot_ns)/odom 10"/>
    <node pkg="tf" type="static_transform_publisher" name="static_map_to_map" 
          args="0 0 0 0 0 0 map $(arg robot_ns)/map 10"/> 

    <!-- move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
      <rosparam file="$(find multirobot_tb3_setup)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find multirobot_tb3_setup)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find multirobot_tb3_setup)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find multirobot_tb3_setup)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find multirobot_tb3_setup)/config/move_base_params.yaml" command="load" />
      <rosparam file="$(find multirobot_tb3_setup)/config/dwa_local_planner_params.yaml" command="load" />
      <remap from="cmd_vel" to="/$(arg robot_ns)/cmd_vel"/>
      <remap from="odom" to="/$(arg robot_ns)/odom"/>
      <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    </node>

  </group>

  <group ns="robot2">
    <arg name="robot_ns" value="robot2" />
    <param name="use_sim_time" value="true" />
    <param name="odom_frame" value="/robot2/odom" />
    <param name="base_frame" value="/robot2/base_footprint" />

	  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
      <param name="frame_id" value="robot1/map"/>
    </node>

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg robot_ns)" />
    </node>
    
    <node pkg="tb3_diff_drive_fake" type="turtlebot3_fake_node" name="turtlebot3_fake_node" output="screen">
    </node>

    <!-- static map -> odom -->
    <node pkg="tf" type="static_transform_publisher" name="static_map_to_odom" 
          args="0 -0.5 0 0 0 0 $(arg robot_ns)/map $(arg robot_ns)/odom 10"/>
    <node pkg="tf" type="static_transform_publisher" name="static_map_to_map" 
          args="0 0 0 0 0 0 map $(arg robot_ns)/map 10"/> 

    <!-- move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
      <rosparam file="$(find multirobot_tb3_setup)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find multirobot_tb3_setup)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find multirobot_tb3_setup)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find multirobot_tb3_setup)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find multirobot_tb3_setup)/config/move_base_params.yaml" command="load" />
      <rosparam file="$(find multirobot_tb3_setup)/config/dwa_local_planner_params.yaml" command="load" />

      <param name="global_costmap/robot_base_frame" value="robot2/base_footprint"/>
      <param name="local_costmap/robot_base_frame" value="robot2/base_footprint"/>
      <param name="local_costmap/global_frame" value="robot2/odom"/>

      <remap from="cmd_vel" to="/$(arg robot_ns)/cmd_vel"/>
      <remap from="odom" to="/$(arg robot_ns)/odom"/>
      <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    </node>
  </group> 
  <!-- RViz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find multirobot_tb3_setup)/config/multirobot.rviz"/>
  </group>
</launch>